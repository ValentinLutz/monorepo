VERSION 0.6
FROM golang:1.19.0-alpine3.16
WORKDIR /build

app.codegen:
    RUN go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@latest
    COPY api-definition/order_api.yaml api-definition/oapi-codegen-app.yaml .
    RUN oapi-codegen --config oapi-codegen-app.yaml order_api.yaml > order.gen.go
    SAVE ARTIFACT order.gen.go AS LOCAL app/adapter/order_api/order.gen.go

app.dependencies:
    COPY ../../libraries/errors+artifact/* /libraries/errors
    COPY ../../libraries/api-helper+artifact/* /libraries/api-helper
    COPY app/go.mod app/go.sum ./
    RUN go mod download

app.config:
    COPY config/config.none-container.yaml config.yaml
    SAVE ARTIFACT config.yaml AS LOCAL app/config/config.yaml

app.artifact:
    FROM +app.dependencies
    COPY +app.codegen/order.gen.go adapter/order_api/order.gen.go
    COPY +app.config/config.yaml config/config.yaml
    COPY app ./
    SAVE ARTIFACT .

app.build:
    FROM +app.artifact
    RUN go build -o app
    SAVE ARTIFACT app


test.unit:
    FROM +app.artifact
    ENV CGO_ENABLED=0
    RUN go test ./...

test.smoke-setup:
    COPY test-smoke .
    ENV CGO_ENABLED=0
    ENTRYPOINT ["go", "test"]
    SAVE IMAGE smoke-test:latest

test.smoke:
    FROM earthly/dind:alpine
    COPY deployment-docker deployment-docker
    COPY +app.config/config.yaml ../config/config.none-container.yaml
    WITH DOCKER --compose deployment-docker/docker-compose.yaml --load +docker.build --load +test.smoke-setup
        RUN docker logs app && docker run --network=golang-reference-project smoke-test:latest
    END


docker.build:
    FROM alpine:3.16
    WORKDIR /app
    COPY +app.build/app app
    CMD ["./app"]
    SAVE IMAGE ghcr.io/valentinlutz/order-service:latest

