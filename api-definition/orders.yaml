openapi: "3.0.3"
info:
  version: 0.1.2
  title: Orders API
paths:
  /api/orders:
    get:
      summary: Get all orders
      tags:
        - orders
      responses:
        200:
          description: An array of orders
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_response"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
    post:
      summary: Create an order
      tags:
        - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/order_request"
      responses:
        201:
          description: Order created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order_response"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
  /api/orders/{orderId}:
    get:
      summary: Info for a specific order
      tags:
        - orders
      parameters:
        - name: orderId
          in: path
          required: true
          description: The id of the order to retrieve
          schema:
            type: string
      responses:
        200:
          description: A single order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order_response"
        404:
          description: Order not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
components:
  schemas:
    order_request:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/order_item_request"
    order_item_request:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: marshmallow
    order_response:
      type: object
      required:
        - order_id
        - creation_date
        - status
        - items
      properties:
        order_id:
          type: string
          example: I3xXiIqbP92-NONE-DEV-Ui*8i0kFHcA
        creation_date:
          type: string    
          format: date-time
        status:
          $ref: "#/components/schemas/order_status"
        items:
          type: array
          items:
            $ref: "#/components/schemas/order_item_response"
    order_status:
      type: string
      enum:
        - order_completed
        - order_canceled
        - order_in_progress
        - order_placed
    orders_response:
      type: array
      items:
        $ref: "#/components/schemas/order_response"
    order_item_response:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: banana
    error_response:
      type: object
      required:
        - method
        - path
        - timestamp
        - code
      properties:
        method:
          type: string
          example: GET
        path:
          type: string
          example: /api/orders
        timestamp:
          type: string
          format: date-time
        code:
          type: integer
          example: 9009
        message:
          type: string
          example: panic it's over 9000