name: default-workflow

on:
  push:

jobs:

  create-version:
    runs-on: ubuntu-latest
    env:
      BRANCH: ${{ github.ref_name }}
    outputs:
      version: ${{ steps.create.outputs.version }}
    steps:
      - name: Create project version
        id: create
        run: |
          if [ 'master' == "$BRANCH"  ]
          then
            echo "::set-output name=version::$(date + "%y.%m.%d.%H%M%S")"
          else
            echo "::set-output name=version::$(date + "%y.%m.%d.%H%M%S" + "-SNAPSHOT")"
          fi

  build-app:
    runs-on: ubuntu-latest
    needs:
      - create-version
    env:
      DOCKER_REGISTRY: ghcr.io
      DOCKER_REPOSITORY: valentinlutz
      VERSION: ${{ needs.create-version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set up GO
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Install oapi-codegen
        run: go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@v1.11.0

      - name: Run unit tests
        run: make test.unit

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.49.0
          working-directory: app
          skip-pkg-cache: true

      - name: Build the container image
        run: make docker.build

      - name: Login to GitHub container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push the container image
        run: make docker.push
